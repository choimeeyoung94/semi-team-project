<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

    <!-- 상품 등록 -->
    <insert id="insertProduct" parameterType="org.puppit.model.dto.ProductDTO"
            useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO product
        (location_id, category_id, seller_id, condition_id, status_id,
         product_name, product_price, product_description)
        VALUES
            (#{locationId}, #{categoryId}, #{sellerId}, #{conditionId}, #{statusId},
             #{productName}, #{productPrice}, #{productDescription})
    </insert>

    <!-- 카테고리 -->
    <select id="getCategories" resultType="org.puppit.model.dto.CategoryDTO">
        SELECT category_id   AS categoryId,
               category_name AS categoryName
        FROM product_category
        ORDER BY category_id
    </select>

    <!-- 지역 -->
    <select id="getLocations" resultType="org.puppit.model.dto.LocationDTO">
        SELECT location_id AS locationId,
               region
        FROM location
        ORDER BY location_id
    </select>

    <!-- 컨디션 -->
    <select id="getConditions" resultType="org.puppit.model.dto.ConditionDTO">
        SELECT condition_id   AS conditionId,
               condition_name AS conditionName
        FROM product_condition
        ORDER BY condition_id
    </select>



    <!-- 상품 이미지 -->
    <insert id="insertProductImage" parameterType="org.puppit.model.dto.ProductImageDTO"
            useGeneratedKeys="true" keyProperty="imageId" keyColumn="image_id">
        INSERT INTO product_image
        (product_id, image_url, is_thumbnail)
        VALUES
            (#{productId} , #{imageUrl},#{isThumbnail})
    </insert>

    <!-- 상품 이미지 조회-->
    <select id="getProductImages"  parameterType="int" resultType="org.puppit.model.dto.ProductImageDTO">
        SELECT image_id AS imageId,
               product_id AS productId,
               image_url AS imageUrl,
               is_thumbnail AS isThumbnail
        FROM product_image
        WHERE product_id = #{productId}
        ORDER BY is_thumbnail DESC, image_id ASC
    </select>

    <!-- getProductById-->
    <select id="getProductById"
            parameterType="int"
            resultType="org.puppit.model.dto.ProductDTO">
        SELECT product_id AS productId,
               product_price AS productPrice
        FROM   product
        WHERE  product_id = #{productId}
    </select>

	<!-- 상품 전체목록 조회 -->
	<select id="getProductList"
	resultType="org.puppit.model.dto.ProductDTO">
	SELECT p.product_id AS productId, p.product_name AS productName, p.product_price AS productPrice, c.category_name AS categoryName, s.status_name AS statusName
	  FROM product p
	  JOIN product_category c ON p.category_id = c.category_id
      JOIN product_condition con ON p.condition_id = con.condition_id
	  JOIN product_status s ON p.status_id = s.status_id
	 ORDER BY p.product_created_at DESC
          
	</select>
	
	<!-- 상품 상세 조회 -->
		<select id="getProductDetail"
	resultType="org.puppit.model.dto.ProductDTO"
	parameterType="java.lang.Integer">
	SELECT p.product_id AS productId, p.product_name AS productName, p.product_price AS productPrice,
				 c.category_name AS categoryName, s.status_name AS statusName, p.product_description AS productDescription
	  FROM product p
	  JOIN product_category c    ON p.category_id  = c.category_id
      JOIN product_condition con ON p.condition_id = con.condition_id
	  JOIN product_status s      ON p.status_id    = s.status_id
	 WHERE p.product_id = #{productId}  
	</select>
	
	<select id="getScrollProduct" resultType="org.puppit.model.dto.ProductDTO">
	SELECT COUNT(*)
	  FROM product p
	</select>



    <!--상품 관리-->
        <resultMap id="MyProducts" type="org.puppit.model.dto.ProductDTO">
            <!-- Product 본체 -->
            <id     property="productId"        column="product_id"/>
            <result property="productName"      column="product_name"/>
            <result property="productPrice"     column="product_price"/>
            <result property="productCreatedAt" column="product_created_at"/>
            <result property="productUpdatedAt" column="product_updated_at"/>
            <result property="categoryId"       column="category_id"/>
            <result property="statusId"         column="status_id"/>

            <!-- 하위: Category -->
            <association property="category" javaType="org.puppit.model.dto.CategoryDTO">
                <id     property="categoryId"   column="category_id"/>
                <result property="categoryName" column="category_name"/>
            </association>

            <!-- 하위: Status -->
            <association property="status" javaType="org.puppit.model.dto.ProductStatusDTO">
                <id     property="statusId"   column="status_id"/>
                <result property="statusName" column="status_name"/>
            </association>

            <!-- 하위: Thumbnail (1장) -->
            <association property="thumbnail" javaType="org.puppit.model.dto.ProductImageDTO">
                <id     property="imageId"    column="thumb_image_id"/>
                <result property="productId"  column="product_id"/>
                <result property="imageUrl"   column="thumb_image_url"/>
                <!-- boolean isThumbnail -> 자바빈 프로퍼티명 'thumbnail' -->
                <result property="isThumbnail"  column="thumb_is_thumbnail"/>
            </association>
        </resultMap>

        <select id="selectMyProducts" parameterType="int" resultMap="MyProducts">
            SELECT
            p.product_id,
            p.product_name,
            p.product_price,
            p.product_created_at,
            p.product_updated_at,
            p.category_id,
            p.status_id,
            c.category_name,
            s.status_name,
            -- 썸네일 1장만 JOIN
            t.image_id     AS thumb_image_id,
            t.image_url    AS thumb_image_url,
            t.is_thumbnail AS thumb_is_thumbnail

            FROM product p
            JOIN product_category c ON p.category_id = c.category_id
            JOIN product_status   s ON p.status_id   = s.status_id
            LEFT JOIN product_image t
            ON t.product_id = p.product_id
            AND t.is_thumbnail = 1

            WHERE p.seller_id = #{value}   <!-- DAO가 Integer 하나를 그대로 넘기면 #{value} -->
            ORDER BY p.product_updated_at DESC, p.product_created_at DESC
        </select>

</mapper>
